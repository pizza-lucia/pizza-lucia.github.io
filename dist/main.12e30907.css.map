{"mappings":"AA2BE,KAAK,eAAC,CAAC,AACL,aAAa,CAAE,IAAI,AACrB,CAAC;ACbD,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,MAAM,CAChB,GAAG,CAAE,IAAI,CACT,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,UAAU,CAAE;MACV,IAAI,CAAC;MACL,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MAC1B,KAAK,CAAC,GAAG,CAAC;MACV,KAAK,CAAC,IAAI;KACX,AACH,CAAC,AACD,IAAI,UAAU,cAAC,CAAC,AACd,MAAM,CAAE,OAAO,AACjB,CAAC;ACRD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzC,aAAa,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,AACf,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,UAAU,CAAE,CAAC,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AACH,CAAC;ACfD,IAAI,cAAC,CAAC,AACJ,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,OAAO,AACjB,CAAC","sources":["./home/batisteo/Projets/pizza-lucia/website/src/components/Cart.svelte","./home/batisteo/Projets/pizza-lucia/website/src/components/Filters.svelte","./home/batisteo/Projets/pizza-lucia/website/src/components/Pizza.svelte","./home/batisteo/Projets/pizza-lucia/website/src/components/Topping.svelte"],"sourcesContent":["<script>\n  import { formatPrice } from \"../utils.js\";\n  import { cart } from \"../store.js\";\n\n  const remove = pizza => {\n    const index = $cart.indexOf(pizza);\n    cart.update(pizzas => pizzas.filter((p, i) => i !== index));\n  };\n\n  $: groupped = $cart\n    .reduce((counts, pizza) => {\n      var counter = counts.find(el => el.pizza.name === pizza.name);\n      if (counter) {\n        counter.count += 1;\n      } else {\n        counts.push({ count: 1, pizza });\n      }\n      return counts;\n    }, Array())\n    .sort((a, b) => a.pizza.number > b.pizza.number);\n\n  $: total = formatPrice(\n    $cart.reduce((amount, pizza) => amount + pizza.price, 0)\n  );\n</script>\n\n<style>\n  aside {\n    margin-bottom: 1rem;\n  }\n</style>\n\n{#if $cart.length > 0}\n  <aside class=\"panel is-success\">\n    <div class=\"panel-heading is-marginless level is-mobile\">\n      <div class=\"level-left\">\n        <span class=\"icon is-large\">\n          <i class=\"fas fa-2x fa-shopping-basket\" />\n        </span>\n      </div>\n      <div class=\"level-right\">\n        <strong class=\"tag is-large is-success is-light\">{total}</strong>\n      </div>\n    </div>\n\n    {#each groupped as line}\n      <div class=\"panel-block\">\n\n        <p class=\"card-header-title has-text-grey\">\n          <span class=\"tag is-white is-large\">{line.count}</span>\n          <span class=\"is-size-5\">{line.pizza.name}</span>\n        </p>\n\n        <div class=\"card-header-icon\">\n          <span class=\"tag is-medium\">\n            <strong>\n              {formatPrice(line.count * line.pizza.price, line.pizza.currency)}\n            </strong>\n          </span>\n          &nbsp;\n          <button\n            class=\"button is-small is-outlined\"\n            on:click={() => remove(line.pizza)}>\n            <span class=\"icon has-text-danger\">\n              <i class=\"fas fa-lg fa-trash-alt\" />\n            </span>\n          </button>\n        </div>\n\n      </div>\n    {/each}\n  </aside>\n{/if}\n","<script>\n  import { slide } from \"svelte/transition\";\n  import { filterToppings } from \"../store.js\";\n  import toppings from \"../toppings.json\";\n\n  const remove = topping => {\n    $filterToppings.delete(topping);\n    filterToppings.set($filterToppings);\n  };\n  const is_class = (color, topping) => {\n    const found = toppings.find(el => el.name === topping);\n    return found ? found.color === color : false;\n  };\n</script>\n\n<style>\n  aside {\n    position: sticky;\n    top: 10px;\n    z-index: 1;\n    padding: 0 16px;\n    background: linear-gradient(\n      0deg,\n      rgba(255, 255, 255, 0) 0%,\n      white 30%,\n      white 100%\n    );\n  }\n  .tag.is-delete {\n    cursor: pointer;\n  }\n</style>\n\n{#if $filterToppings.size !== 0}\n  <aside class=\"field is-grouped is-grouped-multiline\" transition:slide>\n\n    {#each Array.from($filterToppings) as topping}\n      <div class=\"control\">\n        <div class=\"tags has-addons\">\n          <i\n            class=\"tag is-medium\"\n            class:is-info={is_class('blue', topping)}\n            class:is-success={is_class('green', topping)}\n            class:is-warning={is_class('yellow', topping)}\n            class:is-danger={is_class('red', topping)}>\n            {topping}\n          </i>\n          <b class=\"tag is-delete is-medium\" on:click={() => remove(topping)} />\n        </div>\n      </div>\n    {/each}\n\n  </aside>\n{/if}\n","<script>\n  import { formatPrice } from \"../utils.js\";\n  import Toppings from \"./Toppings.svelte\";\n  import { cart } from \"../store.js\";\n\n  export let name = \"\";\n  export let toppings = [];\n  export let weight = 0;\n  export let price = 0.0;\n  export let currency = \"EUR\";\n  export let featured = false;\n  export let number = 0;\n\n  function addToCard() {\n    cart.update(pizzas => [\n      ...pizzas,\n      { name, toppings, weight, price, currency, featured, number }\n    ]);\n  }\n</script>\n\n<style>\n  @media only screen and (max-width: 768px) {\n    .card-content {\n      padding: 1rem;\n    }\n    .card-footer {\n      border-top: 0;\n      padding-bottom: 0.5rem;\n    }\n  }\n</style>\n\n<div class=\"card\">\n  <header class=\"card-header\">\n    <p class=\"card-header-title\">\n      <span class=\"tag is-success\" style=\"margin-right: 0.5rem\">{number}</span>\n      <span class=\"is-size-5\">{name}</span>\n      {#if featured}\n        <span class=\"tag is-warning\" style=\"margin-left: 1rem\">Novinky</span>\n      {/if}\n    </p>\n\n    <div class=\"card-header-icon\">\n      <span class=\"is-hidden-mobile\">\n        <small style=\"margin-right: 1rem\">{weight}g</small>\n        <span class=\"tag is-medium is-warning\">\n          <strong>{formatPrice(price, currency)}</strong>\n        </span>\n        &nbsp;\n      </span>\n      <button class=\"button is-small\" on:click={() => addToCard()}>\n        <span class=\"icon\">\n          <i class=\"fas fa-lg fa-plus\" />\n        </span>\n      </button>\n    </div>\n  </header>\n  <div class=\"card-content\">\n    <Toppings {toppings} />\n  </div>\n  <footer\n    class=\"card-footer is-hidden-tablet\"\n    style=\"justify-content: space-around\">\n\n    <div>\n      <span class=\"tag is-medium\">{weight}g</span>\n    </div>\n    <div>\n      <span class=\"tag is-medium is-warning\">\n        {formatPrice(price, currency)}\n      </span>\n    </div>\n\n  </footer>\n</div>\n","<script>\n  import { filterToppings } from \"../store.js\";\n  import toppings from \"../toppings.json\";\n\n  export let topping;\n  export let medium = false;\n  \n  function is_class(color, topping) {\n    const found = toppings.find(el => el.name === topping);\n    return found ? found.color === color : false\n  }\n\n</script>\n\n<style>\n  .tag {\n    margin: 4px;\n    cursor: pointer;\n  }\n</style>\n\n<span\n  class=\"tag is-light\"\n  class:is-medium={medium}\n  class:is-info={is_class(\"blue\", topping)}\n  class:is-success={is_class(\"green\", topping)}\n  class:is-warning={is_class(\"yellow\", topping)}\n  class:is-danger={is_class(\"red\", topping)}\n  on:click={() => filterToppings.set($filterToppings.add(topping))}>\n  {topping}\n</span>\n"],"names":[],"version":3,"file":"main.12e30907.css.map","sourceRoot":"/__parcel_source_root/"}